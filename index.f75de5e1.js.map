{"mappings":"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","sources":["src/scripts/main.js"],"sourcesContent":["'use strict';\n\nconst table = document.querySelector('table');\nconst headers = table.querySelectorAll('th');\nconst tbody = table.querySelector('tbody');\n\nheaders.forEach((header, index) => {\n  header.addEventListener('click', () => {\n    sortTableByColumn(index);\n  });\n});\n\nconst sortDirections = Array(headers.length).fill(true);\n\nfunction sortTableByColumn(columnIndex) {\n  const rowsArray = Array.from(tbody.querySelectorAll('tr'));\n  const isAscending = sortDirections[columnIndex];\n\n  sortDirections[columnIndex] = !isAscending;\n\n  const sortedRows = rowsArray.sort((rowA, rowB) => {\n    const cellA = rowA.cells[columnIndex].innerText;\n    const cellB = rowB.cells[columnIndex].innerText;\n\n    if (headers[columnIndex].innerText === 'Age') {\n      return isAscending\n        ? parseInt(cellA) - parseInt(cellB)\n        : parseInt(cellB) - parseInt(cellA);\n    }\n\n    if (headers[columnIndex].innerText === 'Salary') {\n      return (\n        parseFloat(cellA.replace(/[$,]/g, '')) -\n        parseFloat(cellB.replace(/[$,]/g, ''))\n      );\n    }\n\n    return cellA.localeCompare(cellB);\n  });\n\n  sortedRows.forEach((row) => tbody.appendChild(row));\n}\n\ntbody.addEventListener('click', (e) => {\n  if (e.target && e.target.nodeName === 'TD') {\n    const row = e.target.parentNode;\n\n    tbody.querySelectorAll('tr').forEach((tr) => tr.classList.remove('active'));\n    row.classList.add('active');\n  }\n});\n\nconst pushNotification = (posTop, posRight, title, description, type) => {\n  const notification = document.createElement('div');\n\n  notification.className = `notification ${type}`;\n  notification.setAttribute('data-qa', `notification ${type}`);\n  notification.style.top = `${posTop}px`;\n  notification.style.right = `${posRight}px`;\n\n  const h2 = document.createElement('h2');\n\n  h2.className = 'title';\n  h2.textContent = title;\n\n  const p = document.createElement('p');\n\n  p.textContent = description;\n  notification.appendChild(h2);\n  notification.appendChild(p);\n\n  document.body.appendChild(notification);\n\n  setTimeout(() => {\n    notification.style.display = 'none';\n  }, 2000);\n};\n\nconst form = document.createElement('form');\n\nform.classList.add('new-employee-form');\n\nform.innerHTML = `\n  <label for=\"employeeName\">\n    Name:\n    <input data-qa=\"name\" type=\"text\" id=\"employeeName\" name=\"employeeName\">\n  </label>\n  <label for=\"position\">\n    Position:\n    <input data-qa=\"position\" type=\"text\" id=\"position\" name=\"position\">\n  </label>\n  <label for=\"office\">\n    Office:\n    <select data-qa=\"office\" id=\"office\" name=\"office\">\n      <option value=\"Tokyo\">Tokyo</option>\n      <option value=\"Singapore\">Singapore</option>\n      <option value=\"London\">London</option>\n      <option value=\"New York\">New York</option>\n      <option value=\"Edinburgh\">Edinburgh</option>\n      <option value=\"San Francisco\">San Francisco</option>\n    </select>\n  </label>\n  <label for=\"age\">\n    Age:\n    <input data-qa=\"age\" type=\"number\" id=\"age\" name=\"age\">\n  </label>\n  <label for=\"salary\">\n    Salary:\n    <input data-qa=\"salary\" type=\"number\" id=\"salary\" name=\"salary\">\n  </label>\n  <button type=\"submit\">Save to table</button>\n`;\n\ndocument.body.appendChild(form);\n\nfunction salaryFormat(number) {\n  return new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 0,\n  }).format(number);\n}\n\nform.addEventListener('submit', (e) => {\n  e.preventDefault();\n\n  const employeeName = form.employeeName.value;\n  const position = form.position.value;\n  const office = form.office.value;\n  const age = form.age.value;\n  const salary = form.salary.value;\n\n  if (employeeName.trim().length < 4) {\n    pushNotification(100, 5, 'Error', 'Name must be grater than 4', 'error');\n  }\n\n  if (age < 18 || age > 90) {\n    pushNotification(220, 5, 'Error', 'Age must be between 18 and 90', 'error');\n  }\n\n  if (\n    employeeName.trim().length >= 4 &&\n    position.trim() &&\n    office &&\n    age > 18 &&\n    age < 90 &&\n    salary\n  ) {\n    const newRow = document.createElement('tr');\n    const salaryFormated = salaryFormat(parseFloat(salary));\n\n    newRow.innerHTML = `\n    <td>${employeeName}</td>\n    <td>${position}</td>\n    <td>${office}</td>\n    <td>${age}</td>\n    <td>${salaryFormated}</td>\n  `;\n    tbody.appendChild(newRow);\n    form.reset();\n\n    pushNotification(\n      220,\n      5,\n      'Success',\n      'Employee was successfully added',\n      'success',\n    );\n  } else {\n    pushNotification(340, 5, 'Error', 'All fields must be filled!', 'error');\n  }\n});\n\ntbody.addEventListener('dblclick', (e) => {\n  if (e.target && e.target.nodeName === 'TD') {\n    const cell = e.target;\n    const originalContent = cell.innerText;\n\n    cell.innerText = '';\n\n    const input = document.createElement('input');\n\n    input.type = 'text';\n    input.value = originalContent;\n    cell.appendChild(input);\n    input.focus();\n\n    input.addEventListener('blur', () => {\n      saveCellContent(cell, input, originalContent);\n    });\n\n    input.addEventListener('keydown', (ev) => {\n      if (ev.key === 'Enter') {\n        saveCellContent(cell, input, originalContent);\n      }\n    });\n  }\n});\n\nfunction saveCellContent(cell, input, originalContent) {\n  const newContent = input.value.trim();\n\n  if (newContent) {\n    if (cell.innerText === 'Salary') {\n      const salary = parseFloat(newContent.replace(/[$,]/g, ''));\n\n      if (!isNaN(salary)) {\n        cell.innerText = salaryFormat(salary);\n      } else {\n        cell.innerText = originalContent;\n        pushNotification('Error', 'Invalid salary format!', 'error');\n      }\n    } else {\n      cell.innerText = newContent;\n    }\n  } else {\n    cell.innerText = originalContent;\n  }\n}\n"],"names":[],"version":3,"file":"index.f75de5e1.js.map","sourceRoot":"/__parcel_source_root/"}